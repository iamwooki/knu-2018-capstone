Title 	How to Use Git and GitHub - Udacity
Date 	2018-10-04
Author	Young Ha
	 
Git : version control system 
Github : code sharing and collaboration platform

 Terminology
# Version control : It refers to any system that allows for systematic versioning of content.

# commit : user created checkpoint. basic building blocks of git. each one representing a version of the content at one point in time.
 - Git requires the user to supply commit message each time a commit is created. This makes looking through old versions useful and pleasant.
 - It's usually a good idea to keep commits small. As the diff between two versions gets bigger, it gets harder to understand and less useful. 
 - However, you don’t want to make your commits too small either. If you always save a commit every time you change a line of code, your history will be harder to read since it will have a huge number of commits over a short time period.
 
 # repository : When you work on a project, you'll often have multiple files that you want to track together. Git calls such a collection of files a repository. 

  Git command
 # git --version : check that installation of git and its version.
 # git diff COMMIT1 COMMIT2 : compares two commit
 # git clone URL(or SSH) : copy entire repository from one computer to another.
 # git log : show commit logs 
 # git checkout COMMIT: temporarily change our files back to how they were at the time of any commit.

 What is a README?
Many projects contain a file named "README" that gives a general description of what the project does and how to use it. 
It's often a good idea to read this file before doing anything with the project, so the file is given this name to make users more likely to read it.

 Some Git Errors and Warnings Solution
 # Should not be doing an octopus
Octopus is a strategy Git uses to combine many different versions of code together. This message can appear if you try to use this strategy in an inappropriate situation.

 # You are in 'detached HEAD' state
HEAD is what Git calls the commit you are currently on. You can “detach” the HEAD by switching to a previous commit. Despite what it sounds like, it’s actually not a bad thing to detach the HEAD. 
Git just warns you so that you’ll realize you’re doing it.
