1. 쿼리 짜놓고
- 파라미터로 string sql
updateQuery("update ~@~!@ from where ~~)

클래스 => db테이블

MainActivity
프로필 사진 ( 불러오기 힘드니까 링크로 저장해서 그 링크 불러오는 방식(string) )
그 프로필의 현재 메시지 몇개 있는지, (완료)
현재 게시글 총 몇개 작성했는지 
알람(위치 공유 시켰는데 안 누른거) //보류

공지 ->the lastest notice 

MarketActivity(카테고리별)
사진, 이건 디자인 생각해보자.

MapActivity
현재 반경 정해서, 그 반경안에 글 올라온좌표 (위치기준으로 게시글 찍기) =게시글에 들어있겠지
게시글은 - 좌표, 작성자(사진), 내용 => 소카

Free-Board
게시글 좌표, 작성자, 내용, 위와 비슷. 폼 다름. 폼은 디자인 해봄.

Notice
공지 푸쉬보내면서 바로 insert into 게시판에 같이 보내기

공지내용 다 뛰우깅.

MessgeActivity
현재 자신의 메시지 불러오기(읽은 것 안 읽은 것 체크해서, 글 색갈 다르게 나타내기 boolean read = true/false
삭제 =>삭제기준은 메시지 고유id나 순서 이건 사용자 계정 아이디랑 join되겠지

UserDB
유저이메일 - 비밀번호(해쉬처리), 이름

지도에서
 - 좌표 저장
 - 그 사람 신상정보
 - 그 사람 history

** 관리자 계정 
 - 관리자 인지 아닌지 확인할 수 있는 기능 (관리자 고유기능)
 - 글 삭제, 공지 사항 -> 구글 에서 표시 해주어야 함.
 - OR 관리자 계정 체크 유무 attribute를 판단해주는 방법도 있다.

** Flea market
 - category 별로 table 만들지 
 - 하나로 묶어서 쓸건지에 대한 이슈

- Auto Increment 사용 ==> 관리자를 fix하고 increase.